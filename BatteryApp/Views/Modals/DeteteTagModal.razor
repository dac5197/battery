@inject ITagController _tagController

@inject IJSRuntime _jsRuntime

<div class="modal modal-child fade" tabindex="-1" role="dialog" id="deleteTagModal">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content border-square">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Delete</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Tag: @Tag.Name</p>
                <br />
                <p>Deleting this Tag will delete it and all associations with Charges.</p>
                <p>Do you want to continue?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger border-square" @onclick="DeleteTagAsync">Delete</button>
                <button type="button" class="btn btn-secondary border-square" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public Tag Tag { get; set; }

    [Parameter]
    public Action ParentStateChanged { get; set; }

    private async void DeleteTagAsync()
    {
        await _tagController.DeleteTagAndAllRelationshipsAsync(Tag.Id);
        ParentStateChanged.Invoke();
        await CloseModalAsync();
    }

    private async Task CloseModalAsync()
    {
        await _jsRuntime.InvokeAsync<object>("CloseModal", "deleteTagModal");
    }
}
