@inject ITagController _tagController

@inject IJSRuntime _jsRuntime

<div class="modal fade" tabindex="-1" role="dialog" id="ManageTagsModal">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content border-square">
            <div class="modal-header">
                <h5 class="modal-title">
                    <IconBattery />
                    @Battery.Id - Manage Tags
                </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row px-5">
                    <div class="col">
                        <table class="table table-sm table-hover">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>
                                        Active Counts
                                        <QuestionMarkToolTip Text="Count of active Charges with this Tag."></QuestionMarkToolTip>
                                    </th>
                                    <th>
                                        All Counts
                                        <QuestionMarkToolTip Text="Count of all Charges with this Tag."></QuestionMarkToolTip>
                                    </th>
                                    <th>
                                        Actions
                                        <QuestionMarkToolTip Text="When deleting an existing Tag, all relations to charges will also be removed."></QuestionMarkToolTip>
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var tag in Tags.OrderBy(x => x.Name))
                                {
                                <tr>
                                    <td>
                                        <TagIndexItem Tag="@tag" ShowTagCounts="@false"></TagIndexItem>
                                    </td>
                                    <td>
                                        @(TagActiveCounts.ContainsKey(tag.Id) ? TagActiveCounts[tag.Id] : 0)
                                    </td>
                                    <td>
                                        @(TagAllCounts.ContainsKey(tag.Id) ? TagAllCounts[tag.Id] : 0)
                                    </td>
                                    <td>
                                        <button class="btn btn-info btn-sm border-square"
                                                type="button"
                                                data-toggle="modal"
                                                data-target="#editTagModal"
                                                @onclick="(() => SetEditTag(tag))">
                                            Edit
                                        </button>
                                        <button class="btn btn-danger btn-sm border-square"
                                                type="button"
                                                data-toggle="modal"
                                                data-target="#deleteTagModal"
                                                @onclick="(() => SetEditTag(tag))">
                                            X
                                        </button>
                                    </td>
                                </tr>
                                }
                            </tbody>
                        </table>
                        <div class="row px-2 mb-3">
                            <div class="col">
                                <button type="button"
                                        class="btn btn-success btn-sm border-square"
                                        data-toggle="modal"
                                        data-target="#addTagModal"
                                        style="width: 32px;"
                                        title="Add Tag"
                                        @onclick="@SetEditTagToNew">
                                    <span class="oi oi-plus"></span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row mt-4">
                    <div class="col">
                        <button type="button" class="btn btn-secondary border-square" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Tag Modals -->
<AddTagModal Battery="@Battery" Tags="@Tags" ParentStateChanged="@TagsChangedAsync"></AddTagModal>
<EditTagModal Battery="@Battery" Tag="@editTag" ParentStateChanged="@TagsChangedAsync"></EditTagModal>
<DeteteTagModal Tag="@editTag" ParentStateChanged="@TagsChangedAsync"></DeteteTagModal>

@code {
    [Parameter]
    public Battery Battery { get; set; }

    [Parameter]
    public List<Tag> Tags { get; set; }

    [Parameter]
    public Dictionary<int, int> TagActiveCounts { get; set; }

    [Parameter]
    public Dictionary<int, int> TagAllCounts { get; set; }

    [Parameter]
    public Action ParentStateChanged { get; set; }

    private Tag editTag = new();

    public async Task CloseModalAsync()
    {
        await _jsRuntime.InvokeAsync<object>("CloseModal", "ManageTagsModal");
    }

    private async void TagsChangedAsync()
    {
        Tags = await _tagController.GetAllTagsAsync(Battery);
        ParentStateChanged.Invoke();
        StateHasChanged();
    }

    private void SetEditTag(Tag tag)
    {
        editTag = tag;
    }

    private void SetEditTagToNew()
    {
        editTag = new Tag();
    }
}
