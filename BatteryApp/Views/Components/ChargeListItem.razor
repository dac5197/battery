@inject IChargeService chargeService

<div class="card bg-light shadow-sm my-2 pb-1 pt-2 px-2 border-square border-transparent charge-max-height @highlightedCssClass" @onmouseover="@SetHighlightedCssClass" @onmouseleave="@ClearHighlightedCssClass">
    <div class="cat-border-cli-@Charge.BatteryId-@Charge.Id pl-4 h-100">
        <div class="row">
            <div class="col">
                <a href="@($"/charge/{Charge.Id}")">
                    <p class="charge-detail">
                        <span class="oi @Category.Icon" style="color: @Category.IconColor"></span>
                        @Charge.Title @Charge.Status
                    </p>
                </a>
            </div>
        </div>
    </div>
</div>

<style>
    .charge-max-height {
        max-height: 120px;
    }

    .highlighted-@Charge.BatteryId-@Charge.Id {
        border: solid;
        border-color: @Category.IconColor;
    }

    .charge-detail {
        color: black;
    }

    .charge-detail:hover {
        text-decoration: underline;
    }

    .cat-border-cli-@Charge.BatteryId-@Charge.Id {
        box-shadow: 10px 0 @Category.IconColor inset;
    }
</style>

@code {
    [Parameter]
    public Category Category { get; set; }

    [Parameter]
    public Charge Charge { get; set; }

    [Parameter]
    public EventCallback<Charge> SetChargeItem { get; set; }

    private string highlightedCssClass;

    protected override void OnAfterRender(bool firstRender)
    {
        highlightedCssClass = "";
        base.OnAfterRender(firstRender);
    }

    private void SetHighlightedCssClass()
    {
        highlightedCssClass = $"highlighted-{Charge.BatteryId}-{Charge.Id}";
    }

    private void ClearHighlightedCssClass()
    {
        highlightedCssClass = "";
    }

    private async Task OnSetChargeItem()
    {
        await SetChargeItem.InvokeAsync(Charge);
    }
}
