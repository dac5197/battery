<div class="card border-square shadow-sm px-2 pt-4 pb-2 my-1">
    <div class="row">
        <div class="col">
            <p>
                @*<IconUserInitials UserProfile="@Profile"></IconUserInitials> @Profile.FirstName @Profile.LastName*@
                <UserInitialsIconAndName UserProfile="@Profile"></UserInitialsIconAndName>
                <span class="oi @Type.Icon" style="color: @Type.IconColor;"></span>
            </p>
        </div>
        <div class="col">
            <p class="text-right">@Note.Timestamp.ToLocalTime().ToString(DateTimeFormat)</p>
        </div>
    </div>
    @if (historyList is not null)
    {
        <!-- Display history field changes -->
        <div class="row mb-2">
            <div class="col">
                <ul class="list-group list-group-flush">
                    @foreach (var history in historyList.Where(x => !(x.FieldName == "Description" || x.FieldName == "Title")))
                    {
                        <li class="list-group-item border-0 py-1 bg-transparent">
                            <HistoryListItem HistoryItem="@history"></HistoryListItem>
                        </li>
                    }
                </ul>

            </div>
        </div>
        <!-- Display history text changes -->
        @foreach (var history in historyList.Where(x => x.FieldName == "Description" || x.FieldName == "Title"))
        {
            <div class="row">
                <div class="col px-4">
                    <p class="mb-1">@history.FieldName</p>
                    <div>
                        <p class="new-value px-1">@history.NewValue</p>
                    </div>
                    <div>
                        <p class="old-value px-1">@history.OldValue</p>
                    </div>
                </div>
            </div>
        }
    }
    <!-- Display user entered Note text -->
    @if (!string.IsNullOrWhiteSpace(Note.Description))
    {
        <div class="row">
            <div class="col px-4">
                <p class="mb-1">Note</p>
                <div>
                    <p class="note px-1">@Note.Description</p>
                </div>
            </div>
        </div>
    }

</div>

<style>
    .old-value {
        color: dimgray;
        background-color: lightgray;
        text-decoration: line-through;
        white-space: pre-wrap;
    }

    .new-value {
        color: darkgreen;
        background-color: palegreen;
        white-space: pre-wrap;
    }
    .note {
        color: darkblue;
        background-color: lightblue;
        white-space: pre-wrap;
    }

</style>

@code {
    [Parameter]
    public string DateTimeFormat { get; set; }

    [Parameter]
    public Note Note { get; set; }

    [Parameter]
    public NoteType Type { get; set; }

    [Parameter]
    public UserProfile Profile { get; set; }

    private List<HistoryJson> historyList = new();

    protected override Task OnInitializedAsync()
    {
        historyList = Note.History?.ToList();
        return base.OnInitializedAsync();
    }
}
