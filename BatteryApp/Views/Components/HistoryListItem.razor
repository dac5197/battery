

<div class="d-flex d-inline">
    <div style="min-width: 10ch">
        @fieldName
    </div>
    <div class="new-value px-1 mx-1">
        @newValue
    </div>
    <div class="old-value px-1 mx-1">
        @oldValue
    </div>
</div>

@code {
    [Parameter]
    public HistoryJson HistoryItem { get; set; }

    [CascadingParameter]
    public List<Category> Categories { get; set; }

    [CascadingParameter]
    public List<Priority> Priorities { get; set; }

    [CascadingParameter]
    public List<Status> Statuses { get; set; }

    private string fieldName;
    private string newValue;
    private string oldValue;

    protected override Task OnInitializedAsync()
    {
        if (HistoryItem is not null)
        {
            GetRelatedFieldValues();
        }

        return base.OnInitializedAsync();
    }

    private void GetRelatedFieldValues()
    {


        switch (HistoryItem.FieldName)
        {
            case "CategoryId":
                fieldName = "Category";
                newValue = Categories?.Where(x => x.Id.ToString() == HistoryItem.NewValue).FirstOrDefault().Name;
                oldValue = Categories?.Where(x => x.Id.ToString() == HistoryItem.OldValue).FirstOrDefault().Name;
                break;

            case "PriorityId":
                fieldName = "Priority";
                newValue = Priorities?.Where(x => x.Id.ToString() == HistoryItem.NewValue).FirstOrDefault().DisplayName;
                oldValue = Priorities?.Where(x => x.Id.ToString() == HistoryItem.OldValue).FirstOrDefault().DisplayName;
                break;

            case "StatusId":
                fieldName = "Status";
                newValue = Statuses?.Where(x => x.Id.ToString() == HistoryItem.NewValue).FirstOrDefault().Name;
                oldValue = Statuses?.Where(x => x.Id.ToString() == HistoryItem.OldValue).FirstOrDefault().Name;
                break;

            default:
                fieldName = HistoryItem.FieldName;
                newValue = HistoryItem?.NewValue;
                oldValue = HistoryItem?.OldValue;
                break;
        }
    }
}
