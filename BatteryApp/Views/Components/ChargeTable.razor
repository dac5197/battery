@inject IChargeService _chargeService

<div class="row mb-3">
    <div class="col">
        <div class="card border-square shadow-sm px-2 pt-2 pb-0 h-100">
            <table class="table table-hover table-sm">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Title</th>
                        <th>Priority</th>
                        <th>Status</th>
                        <th>Children</th>
                        <th>Created</th>
                        <th>Updated</th>
                        <th>Completed</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var charge in Charges.Where(x => x.ParentId is null))
                    {
                        <ChargeTableItem @key="@charge"
                                         @bind-Child="@boundChild"
                                         Charge="@charge"
                                         ParentStateChanged="@ParentStateChanged"></ChargeTableItem>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public List<Charge> Charges { get; set; }

    [Parameter]
    public Charge Child { get; set; }

    [Parameter]
    public EventCallback<Charge> ChildChanged { get; set; }

    private Charge boundChild
    {
        get => Child;
        set => ChildChanged.InvokeAsync(value);
    }

    [Parameter]
    public Action ParentStateChanged { get; set; }

    [CascadingParameter(Name = "Categories")]
    private List<Category> Categories { get; set; }

    [CascadingParameter(Name = "Priorities")]
    private List<Priority> Priorities { get; set; }

    [CascadingParameter(Name = "Statuses")]
    private List<Status> Statuses { get; set; }

    [CascadingParameter(Name = "SearchText")]
    private string SearchText { get; set; }

    [CascadingParameter(Name = "ShowChildren")]
    private bool ShowChildren { get; set; }
}
